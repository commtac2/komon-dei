#!/usr/sbin/nft -f

flush ruleset

define MY_VLAN = 10.4.3.0/24
define ROUTER_VLAN_IP = 10.4.3.1
define BROADCAST_ADDRESS = 255.255.255.255
define WLAN_IP = 123.654.178.109
define WIREGUARD_PORT =  51820

table inet bigiron {

    # Define named counters
    counter input_accepted_packets { comment "Input Accepted Packets" }
    counter input_dropped_packets { comment "Input Dropped Packets" }
    counter input_invalid_packets { comment "Input Invalid Packets" }
    counter spoofed_loopback { comment "Spoofed LoopBack" }

    counter output_accepted_packets { comment "Output Accepted Packets" }
    counter output_dropped_packets { comment "Output Dropped Packets" }
    counter output_invalid_packets { comment "Output Invalid Packets" }

    counter dns_queries { comment "DNS Queries" }
    counter router_services { comment "Router Services" }

    # Input chain: Handles incoming packets
    chain input {
        # Drop all packets by default
        type filter hook input priority 0;
        policy drop;

        ## Drop Input Invalid packets
        ct state invalid counter name "input_invalid_packets" log prefix "[NFT][DROP] Invalid Inbound Packet: " flags all limit rate 5/second burst 10 packets drop

        ## Track and Accept Established Connections
        ct state {established, related} counter name "input_accepted_packets" accept

        ## Protect against loopback sppofing
        iif != lo ip daddr 127.0.0.1/8 counter name "spoofed_loopback" log prefix "[NFT][DROP] Spoofed Loopback: " flags all limit rate 5/second burst 10 packets drop
        iif lo accept comment "accept loopback"

        ## SSH Switch
        # ip saddr $MY_VLAN tcp dport 22 ct state new counter name "input_accepted_packets" accept

        ## Allow Broadcast from Router on 10001
        # ip saddr $ROUTER_VLAN_IP ip daddr $BROADCAST_ADDRESS udp dport 10001 ct state new counter name "router_services" accept
        ## Allow Wireguard from Router
        # ip saddr $ROUTER_VLAN_IP udp sport $WIREGUARD_PORT ct state new counter name "input_accepted_packets" accept

        ## Dropped Packet Catch All Logging
        counter name "input_dropped_packets" log prefix "[NFT][DROP] Dropped Inbound Packet: " flags all limit rate 5/second burst 10 packets
    }

    # Forward chain: Handles packets forwarded through the router.
    chain forward {
        ## Drop everything As We Are No Router.
        ## Or.... Somebody Else Do It Please. 
        type filter hook forward priority 0;
        policy drop;
    }

    # Output chain: Handles outgoing packets
    chain output {
        # Drop all packets by default
        type filter hook output priority 0;
        policy drop;

        ## Drop Output Invalid Packets
        ct state invalid counter name "output_invalid_packets" log prefix "[NFT][DROP] Invalid Outbound Packet: " flags all limit rate 5/second burst 10 packets drop

        ## Accept packets related to established connections
        ct state {established, related} counter name "output_accepted_packets" accept

        ## Accept all traffic on the loopback
        oif lo accept comment "Accept loopback outbound"

        ## Allow DNS from Quad 9
        ip daddr {9.9.9.9, 149.112.112.112} udp dport 53 ct state new counter name "dns_queries" accept

        ## Trust outgoing HTTPS over TCP from Me.
        tcp dport 443 ct state new counter name "output_accepted_packets" accept

        ## HTTP SWITCH
        # tcp dport 80 ct state new counter name "output_accepted_packets" accept

        ## RSYNC SWITCH
        # tcp dport 873 ct state new counter name "output_accepted_packets" accept

        ## SSH SWITCH
        ip daddr $MY_VLAN tcp dport 22 ct state new counter name "output_accepted_packets" accept

	    ## ALLOW Outbound to WireGuard on Router VLAN and WLAN
        # ip daddr $ROUTER_VLAN_IP udp dport $WIREGUARD_PORT ct state new counter name "output_accepted_packets" accept
        # ip daddr $WLAN_IP udp dport $WIREGUARD_PORT ct state new counter name "output_accepted_packets" accept

        ## Dropped Packet Catch All Logging
        counter name "output_dropped_packets" log prefix "[NFT][DROP] Dropped Outbound Packet: " flags all limit rate 5/second burst 10 packets
    }
}
